{"version":3,"sources":["pages/Home.tsx","pages/Example.tsx","pages/Forms.tsx","pages/Icons.tsx","routes.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["HomePage","className","to","asCustom","Link","ExamplePage","variant","target","FormSchema","Yup","shape","email","required","password","min","max","fruit","nullable","fruitOptions","Object","entries","apple","apricot","avocado","banana","blackberry","blueberry","boysenberry","breadfruit","map","value","label","FormsPage","fileInputRef","React","createRef","initialValues","appointmentDate","file","attachments","validationSchema","onSubmit","values","setSubmitting","console","log","setTimeout","errors","touched","handleSubmit","isSubmitting","setFieldValue","JSON","stringify","type","validation","heading","id","isValid","length","htmlFor","as","TextInput","name","ComboBox","options","onChange","val","defaultValue","DatePicker","e","event","files","multiple","i","push","onDrop","ref","disabled","IconsPage","args","size","Routes","App","useState","mobileNavOpen","setMobileNavOpen","HOME_PAGE","EXAMPLES_PAGE","FORMS_PAGE","ICONS_PAGE","toggleMobileNav","prevOpen","navItems","basic","onClick","items","onToggleMobileNav","mobileExpanded","path","Example","Icons","Forms","Home","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+NAkBeA,EAdE,kBACf,iCACE,wDAEA,oBAAGC,UAAU,YAAb,uHAEqC,IACnC,cAAC,OAAD,CAAWC,GAAG,YAAYC,SAAUC,IAApC,+CCsBSC,EA7BK,kBAClB,oCACE,0CAEA,mBAAGJ,UAAU,YAAb,wDAEA,qBAAIA,UAAU,WAAd,UACE,6BACE,cAAC,OAAD,CACEC,GAAG,SACHC,SAAUC,IACVE,QAAQ,WACRC,OAAO,SAJT,qBAQF,6BACE,cAAC,OAAD,CACEL,GAAG,SACHC,SAAUC,IACVE,QAAQ,WACRC,OAAO,SAJT,4B,gBCHFC,EAAaC,MAAaC,MAAM,CACpCC,MAAOF,MAAaE,QAAQC,WAC5BC,SAAUJ,MAAaK,IAAI,GAAGC,IAAI,IAAIH,WACtCI,MAAOP,MAAaQ,aAehBC,EAAeC,OAAOC,QAZb,CACbC,MAAO,QACPC,QAAS,UACTC,QAAS,UACTC,OAAQ,SACRC,WAAY,aACZ,eAAgB,eAChBC,UAAW,YACXC,YAAa,cACbC,WAAY,eAG8BC,KAAI,yCAAmB,CACjEC,MAD8C,KAE9CC,MAF8C,SAsKjCC,EAjKG,WAChB,IAAMC,EAAeC,IAAMC,YAE3B,OACE,qCACE,gDACA,oCACE,wCACA,cAAC,IAAD,CACEC,cAAe,CACbzB,MAAO,GACPE,SAAU,GACVG,MAAO,UACPqB,gBAAiB,YACjBC,KAAM,GACNC,YAAa,IAEfC,iBAAkBhC,EAClBiC,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBC,QAAQC,IAAI,oBAAqBH,GACjCI,YAAW,WACTF,QAAQC,IAAI,oBACZF,GAAc,KACb,MAfP,SAiBG,gBACCD,EADD,EACCA,OACAK,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,cAND,OAQC,eAAC,OAAD,CAAMV,SAAUQ,EAAhB,UACE,gCACE,6CACA,8BAAMG,KAAKC,UAAUX,QAGtBM,EAAQrC,OAASoC,EAAOpC,OACvB,cAAC,QAAD,CAAO2C,KAAK,OAAOC,YAAU,EAACC,QAAQ,qBAAtC,SACE,eAAC,sBAAD,CAAqBC,GAAG,iBAAxB,UACE,cAAC,iBAAD,CACEA,GAAG,WACHC,QAAShB,EAAO/B,MAAMgD,OAAS,EAFjC,qCAKA,cAAC,iBAAD,CAAgBF,GAAG,cAAcC,SAAUX,EAAOpC,MAAlD,6CAGCoC,EAAOpC,WAId,cAAC,QAAD,CAAOiD,QAAQ,QAAf,mBACA,cAAC,IAAD,CACEC,GAAIC,YACJR,KAAK,QACLS,KAAK,QACLN,GAAG,QACH3B,MAAOY,EAAO/B,QAEfqC,EAAQnC,UAAYkC,EAAOlC,UAC1B,cAAC,QAAD,CAAOyC,KAAK,OAAOC,YAAU,EAACC,QAAQ,wBAAtC,SACE,eAAC,sBAAD,CAAqBC,GAAG,oBAAxB,UACE,cAAC,iBAAD,CACEA,GAAG,WACHC,QAAShB,EAAO7B,SAAS8C,OAAS,EAFpC,qCAKA,cAAC,iBAAD,CAAgBF,GAAG,SAASC,SAAUX,EAAOlC,SAA7C,oDAMN,cAAC,QAAD,CAAO+C,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,GAAIC,YACJR,KAAK,WACLS,KAAK,WACLN,GAAG,WACH3B,MAAOY,EAAO7B,WAEhB,cAAC,QAAD,CAAO+C,QAAQ,QAAf,+BACA,cAAC,IAAD,CACEC,GAAIG,WACJD,KAAK,QACLN,GAAG,QACHQ,QAAS/C,EACTgD,SAAU,SAACC,GAAD,OAAiBhB,EAAc,QAASgB,GAAK,IACvDC,aAAa,YAEf,eAAC,YAAD,WACE,cAAC,QAAD,CAAOX,GAAG,yBAAyBG,QAAQ,mBAA3C,8BAGA,qBAAK3D,UAAU,WAAWwD,GAAG,wBAA7B,wBAGA,cAAC,IAAD,CACEI,GAAIQ,aACJZ,GAAG,kBACHM,KAAK,kBACL,mBAAiB,+CACjBK,aAAa,aACbF,SAAU,SAACC,GAAD,OACRhB,EAAc,kBAAmBgB,GAAK,SAK5C,eAAC,YAAD,WACE,cAAC,QAAD,CAAOP,QAAQ,OAAf,iCACA,cAAC,YAAD,CACEH,GAAG,OACHM,KAAK,OACLG,SAAU,SAACI,GAAgC,IAAD,EAClCC,EAAQD,EAEd,UAAIC,EAAMhE,OAAOiE,aAAjB,OAAI,EAAoBb,QACtBR,EAAc,OAAQoB,EAAMhE,OAAOiE,MAAM,UAMjD,eAAC,YAAD,WACE,cAAC,QAAD,CAAOZ,QAAQ,cAAf,mCACA,cAAC,YAAD,CACEH,GAAG,cACHM,KAAK,cACLU,UAAQ,EACRP,SAAU,SAACI,GAAgC,IAAD,EAClCC,EAAQD,EACRE,EAAQ,GACd,aAAID,EAAMhE,OAAOiE,aAAjB,OAAI,EAAoBb,OACtB,IAAK,IAAIe,EAAI,EAAGA,GAAC,UAAGH,EAAMhE,OAAOiE,aAAhB,aAAG,EAAoBb,QAAQe,IAAK,CAAC,IAAD,EACnDF,EAAMG,KAAKJ,EAAMhE,OAAOiE,MAAME,IAGlCvB,EAAc,cAAeqB,IAE/BI,OAAQ,SAACN,GACP1B,QAAQC,IAAI,cAAeyB,IAE7BO,IAAK5C,OAIT,cAAC,SAAD,CAAQqB,KAAK,SAASwB,SAAU5B,EAAhC,iC,OCkTC6B,EA9PG,WAChB,IAAMC,EAAO,CAAEC,KAAM,GAErB,OACE,oCACE,uCACA,mBAAGhF,UAAU,YAAb,oFAIA,gCACE,cAAC,uBAAD,eAA0B+E,IAC1B,cAAC,wBAAD,eAA2BA,IAC3B,cAAC,qBAAD,eAAwBA,IACxB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,oBAAD,eAAuBA,IACvB,cAAC,UAAD,eAAaA,IACb,cAAC,gBAAD,eAAmBA,IACnB,cAAC,uBAAD,eAA0BA,IAC1B,cAAC,YAAD,eAAeA,IACf,cAAC,qBAAD,eAAwBA,IACxB,cAAC,mBAAD,eAAsBA,IACtB,cAAC,gBAAD,eAAmBA,IACnB,cAAC,oBAAD,eAAuBA,IACvB,cAAC,oBAAD,eAAuBA,IACvB,cAAC,kBAAD,eAAqBA,IACrB,cAAC,mBAAD,eAAsBA,IACtB,cAAC,kBAAD,eAAqBA,IACrB,cAAC,UAAD,eAAaA,IACb,cAAC,iBAAD,eAAoBA,IACpB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,kBAAD,eAAqBA,IACrB,cAAC,gBAAD,eAAmBA,IACnB,cAAC,eAAD,eAAkBA,IAClB,cAAC,cAAD,eAAiBA,IACjB,cAAC,cAAD,eAAiBA,IACjB,cAAC,eAAD,eAAkBA,IAClB,cAAC,gBAAD,eAAmBA,IACnB,cAAC,YAAD,eAAeA,IACf,cAAC,oBAAD,eAAuBA,IACvB,cAAC,eAAD,eAAkBA,IAClB,cAAC,cAAD,eAAiBA,IACjB,cAAC,aAAD,eAAgBA,IAChB,cAAC,WAAD,eAAcA,IACd,cAAC,YAAD,eAAeA,IACf,cAAC,2BAAD,eAA8BA,IAC9B,cAAC,kBAAD,eAAqBA,IACrB,cAAC,yBAAD,eAA4BA,IAC5B,cAAC,gBAAD,eAAmBA,IACnB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,cAAD,eAAiBA,IACjB,cAAC,YAAD,eAAeA,IACf,cAAC,oBAAD,eAAuBA,IACvB,cAAC,YAAD,eAAeA,IACf,cAAC,WAAD,eAAcA,IACd,cAAC,cAAD,eAAiBA,IACjB,cAAC,4BAAD,eAA+BA,IAC/B,cAAC,mBAAD,eAAsBA,IACtB,cAAC,yBAAD,eAA4BA,IAC5B,cAAC,kBAAD,eAAqBA,IACrB,cAAC,kBAAD,eAAqBA,IACrB,cAAC,kBAAD,eAAqBA,IACrB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,WAAD,eAAcA,IACd,cAAC,aAAD,eAAgBA,IAChB,cAAC,uBAAD,eAA0BA,IAC1B,cAAC,iBAAD,eAAoBA,IACpB,cAAC,qBAAD,eAAwBA,IACxB,cAAC,oBAAD,eAAuBA,IACvB,cAAC,oBAAD,eAAuBA,IACvB,cAAC,qBAAD,eAAwBA,IACxB,cAAC,mBAAD,eAAsBA,IACtB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,UAAD,eAAaA,IACb,cAAC,yBAAD,eAA4BA,IAC5B,cAAC,kBAAD,eAAqBA,IACrB,cAAC,YAAD,eAAeA,IACf,cAAC,mBAAD,eAAsBA,IACtB,cAAC,YAAD,eAAeA,IACf,cAAC,iBAAD,eAAoBA,IACpB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,eAAD,eAAkBA,IAClB,cAAC,kBAAD,eAAqBA,IACrB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,eAAD,eAAkBA,IAClB,cAAC,qBAAD,eAAwBA,IACxB,cAAC,mBAAD,eAAsBA,IACtB,cAAC,kBAAD,eAAqBA,IACrB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,gBAAD,eAAmBA,IACnB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,kBAAD,eAAqBA,IACrB,cAAC,gBAAD,eAAmBA,IACnB,cAAC,WAAD,eAAcA,IACd,cAAC,aAAD,eAAgBA,IAChB,cAAC,aAAD,eAAgBA,IAChB,cAAC,eAAD,eAAkBA,IAClB,cAAC,aAAD,eAAgBA,IAChB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,kBAAD,eAAqBA,IACrB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,YAAD,eAAeA,IACf,cAAC,aAAD,eAAgBA,IAChB,cAAC,eAAD,eAAkBA,IAClB,cAAC,eAAD,eAAkBA,IAClB,cAAC,aAAD,eAAgBA,IAChB,cAAC,cAAD,eAAiBA,IACjB,cAAC,WAAD,eAAcA,IACd,cAAC,kBAAD,eAAqBA,IACrB,cAAC,mBAAD,eAAsBA,IACtB,cAAC,cAAD,eAAiBA,IACjB,cAAC,WAAD,eAAcA,IACd,cAAC,eAAD,eAAkBA,IAClB,cAAC,YAAD,eAAeA,IACf,cAAC,qBAAD,eAAwBA,IACxB,cAAC,gBAAD,eAAmBA,IACnB,cAAC,qBAAD,eAAwBA,IACxB,cAAC,YAAD,eAAeA,IACf,cAAC,WAAD,eAAcA,IACd,cAAC,kBAAD,eAAqBA,IACrB,cAAC,eAAD,eAAkBA,IAClB,cAAC,gBAAD,eAAmBA,IACnB,cAAC,eAAD,eAAkBA,IAClB,cAAC,YAAD,eAAeA,IACf,cAAC,eAAD,eAAkBA,IAClB,cAAC,eAAD,eAAkBA,IAClB,cAAC,aAAD,eAAgBA,IAChB,cAAC,gBAAD,eAAmBA,IACnB,cAAC,uBAAD,eAA0BA,IAC1B,cAAC,WAAD,eAAcA,IACd,cAAC,cAAD,eAAiBA,IACjB,cAAC,WAAD,eAAcA,IACd,cAAC,gBAAD,eAAmBA,IACnB,cAAC,0BAAD,eAA6BA,IAC7B,cAAC,sBAAD,eAAyBA,IACzB,cAAC,wBAAD,eAA2BA,IAC3B,cAAC,oBAAD,eAAuBA,IACvB,cAAC,0BAAD,eAA6BA,IAC7B,cAAC,mBAAD,eAAsBA,IACtB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,mBAAD,eAAsBA,IACtB,cAAC,oBAAD,eAAuBA,IACvB,cAAC,kBAAD,eAAqBA,IACrB,cAAC,gBAAD,eAAmBA,IACnB,cAAC,mBAAD,eAAsBA,IACtB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,WAAD,eAAcA,IACd,cAAC,eAAD,eAAkBA,IAClB,cAAC,kBAAD,eAAqBA,IACrB,cAAC,YAAD,eAAeA,IACf,cAAC,aAAD,eAAgBA,IAChB,cAAC,WAAD,eAAcA,IACd,cAAC,WAAD,eAAcA,IACd,cAAC,kBAAD,eAAqBA,IACrB,cAAC,UAAD,eAAaA,IACb,cAAC,YAAD,eAAeA,IACf,cAAC,sBAAD,eAAyBA,IACzB,cAAC,WAAD,eAAcA,IACd,cAAC,mBAAD,eAAsBA,IACtB,cAAC,gBAAD,eAAmBA,IACnB,cAAC,eAAD,eAAkBA,IAClB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,qBAAD,eAAwBA,IACxB,cAAC,mBAAD,eAAsBA,IACtB,cAAC,wBAAD,eAA2BA,IAC3B,cAAC,sBAAD,eAAyBA,IACzB,cAAC,aAAD,eAAgBA,IAChB,cAAC,oBAAD,eAAuBA,IACvB,cAAC,0BAAD,eAA6BA,IAC7B,cAAC,wBAAD,eAA2BA,IAC3B,cAAC,uBAAD,eAA0BA,IAC1B,cAAC,WAAD,eAAcA,IACd,cAAC,aAAD,eAAgBA,IAChB,cAAC,aAAD,eAAgBA,IAChB,cAAC,WAAD,eAAcA,IACd,cAAC,YAAD,eAAeA,IACf,cAAC,kBAAD,eAAqBA,IACrB,cAAC,YAAD,eAAeA,IACf,cAAC,mBAAD,eAAsBA,IACtB,cAAC,aAAD,eAAgBA,IAChB,cAAC,cAAD,eAAiBA,IACjB,cAAC,2BAAD,eAA8BA,IAC9B,cAAC,WAAD,eAAcA,IACd,cAAC,qBAAD,eAAwBA,IACxB,cAAC,aAAD,eAAgBA,IAChB,cAAC,aAAD,eAAgBA,IAChB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,cAAD,eAAiBA,IACjB,cAAC,oBAAD,eAAuBA,IACvB,cAAC,gBAAD,eAAmBA,IACnB,cAAC,cAAD,eAAiBA,IACjB,cAAC,oBAAD,eAAuBA,IACvB,cAAC,eAAD,eAAkBA,IAClB,cAAC,aAAD,eAAgBA,IAChB,cAAC,cAAD,eAAiBA,IACjB,cAAC,aAAD,eAAgBA,IAChB,cAAC,eAAD,eAAkBA,IAClB,cAAC,WAAD,eAAcA,IACd,cAAC,4BAAD,eAA+BA,IAC/B,cAAC,uBAAD,eAA0BA,IAC1B,cAAC,yBAAD,eAA4BA,IAC5B,cAAC,4BAAD,eAA+BA,IAC/B,cAAC,gCAAD,eAAmCA,IACnC,cAAC,eAAD,eAAkBA,IAClB,cAAC,YAAD,eAAeA,IACf,cAAC,aAAD,eAAgBA,IAChB,cAAC,qBAAD,eAAwBA,IACxB,cAAC,WAAD,eAAcA,IACd,cAAC,WAAD,eAAcA,IACd,cAAC,qBAAD,eAAwBA,IACxB,cAAC,gBAAD,eAAmBA,IACnB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,WAAD,eAAcA,IACd,cAAC,eAAD,eAAkBA,IAClB,cAAC,kBAAD,eAAqBA,IACrB,cAAC,YAAD,eAAeA,IACf,cAAC,cAAD,eAAiBA,IACjB,cAAC,mBAAD,eAAsBA,IACtB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,mBAAD,eAAsBA,IACtB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,YAAD,eAAeA,IACf,cAAC,gBAAD,eAAmBA,IACnB,cAAC,eAAD,eAAkBA,IAClB,cAAC,YAAD,eAAeA,IACf,cAAC,cAAD,eAAiBA,IACjB,cAAC,gBAAD,eAAmBA,IACnB,cAAC,mBAAD,eAAsBA,IACtB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,cAAD,eAAiBA,IACjB,cAAC,WAAD,eAAcA,IACd,cAAC,iBAAD,eAAoBA,IACpB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,aAAD,eAAgBA,IAChB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,eAAD,eAAkBA,IAClB,cAAC,mBAAD,eAAsBA,IACtB,cAAC,gBAAD,eAAmBA,IACnB,cAAC,oBAAD,eAAuBA,IACvB,cAAC,gBAAD,eAAmBA,IACnB,cAAC,cAAD,eAAiBA,IACjB,cAAC,WAAD,eAAcA,IACd,cAAC,WAAD,eAAcA,IACd,cAAC,WAAD,eAAcA,IACd,cAAC,cAAD,eAAiBA,IACjB,cAAC,aAAD,eAAgBA,IAChB,cAAC,iBAAD,eAAoBA,IACpB,cAAC,cAAD,eAAiBA,WC3enBE,EACO,IADPA,EAEW,YAFXA,EAGQ,SAHRA,EAIQ,SC2FCC,G,OAnEH,WACV,MAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACQC,EAAqDL,EAA1CM,EAA0CN,EAA3BO,EAA2BP,EAAfQ,EAAeR,EAEvDS,EAAkB,WACtBL,GAAiB,SAACM,GAAD,OAAeA,MAG5BC,EAAW,CACf,cAAC,IAAD,CAAS3F,GAAIqF,EAAb,kBAGA,cAAC,IAAD,CAASrF,GAAIsF,EAAb,sBAGA,cAAC,IAAD,CAAStF,GAAIwF,EAAb,oBAKF,OACE,eAAC,IAAD,WACE,cAAC,YAAD,IACA,cAAC,SAAD,CAAQI,OAAK,EAAb,SACE,sBAAK7F,UAAU,oBAAf,UACE,sBAAKA,UAAU,aAAf,UACE,cAAC,QAAD,UACE,cAAC,IAAD,CAAMC,GAAIqF,EAAV,mCAEF,cAAC,gBAAD,CACExD,MAAM,OACNgE,QAASJ,EACT1F,UAAU,oBAId,cAAC,aAAD,CACE,aAAW,qBACX+F,MAAOH,EACPI,kBAAmBN,EACnBO,eAAgBb,SAKtB,yBAASpF,UAAU,cAAnB,SACE,cAAC,gBAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkG,KAAMX,EAAb,SACE,cAACY,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAMT,EAAb,SACE,cAACW,EAAD,MAEF,cAAC,IAAD,CAAOF,KAAMV,EAAb,SACE,cAACa,EAAD,MAEF,cAAC,IAAD,CAAOH,KAAMZ,EAAb,SACE,cAACgB,EAAD,kBC1EMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEJC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7E,QAAQ6E,MAAMA,EAAMC,a","file":"static/js/main.495e5e47.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Link as USWDSLink } from '@trussworks/react-uswds'\n\nconst HomePage = (): React.ReactElement => (\n  <main>\n    <h1>ReactUSWDS Example App</h1>\n\n    <p className=\"usa-intro\">\n      This is an example application that can be used to demonstrate and test\n      ReactUSWDS functionality. Here's a{' '}\n      <USWDSLink to=\"/examples\" asCustom={Link}>\n        link to the examples page!\n      </USWDSLink>\n    </p>\n  </main>\n)\n\nexport default HomePage\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Link as USWDSLink } from '@trussworks/react-uswds'\n\nconst ExamplePage = (): React.ReactElement => (\n  <section>\n    <h1>Examples</h1>\n\n    <p className=\"usa-intro\">Example usage of react-uswds in real life!</p>\n\n    <ul className=\"usa-list\">\n      <li>\n        <USWDSLink\n          to=\"/forms\"\n          asCustom={Link}\n          variant=\"external\"\n          target=\"_blank\">\n          Forms\n        </USWDSLink>\n      </li>\n      <li>\n        <USWDSLink\n          to=\"/icons\"\n          asCustom={Link}\n          variant=\"external\"\n          target=\"_blank\">\n          Icons\n        </USWDSLink>\n      </li>\n    </ul>\n  </section>\n)\n\nexport default ExamplePage\n","import React from 'react'\nimport { Field, Formik } from 'formik'\nimport * as Yup from 'yup'\nimport {\n  Alert,\n  Button,\n  ComboBox,\n  Form,\n  FormGroup,\n  Label,\n  TextInput,\n  ValidationChecklist,\n  ValidationItem,\n  DatePicker,\n  FileInput,\n  FileInputRef,\n} from '@trussworks/react-uswds'\n\nconst FormSchema = Yup.object().shape({\n  email: Yup.string().email().required(),\n  password: Yup.string().min(8).max(20).required(),\n  fruit: Yup.string().nullable(),\n})\n\nconst fruits = {\n  apple: 'Apple',\n  apricot: 'Apricot',\n  avocado: 'Avocado',\n  banana: 'Banana',\n  blackberry: 'Blackberry',\n  'blood orange': 'Blood orange',\n  blueberry: 'Blueberry',\n  boysenberry: 'Boysenberry',\n  breadfruit: 'Breadfruit',\n}\n\nconst fruitOptions = Object.entries(fruits).map(([value, key]) => ({\n  value: value,\n  label: key,\n}))\n\nconst FormsPage = (): React.ReactElement => {\n  const fileInputRef = React.createRef<FileInputRef>()\n\n  return (\n    <>\n      <h1>Forms Examples</h1>\n      <section>\n        <h2>Formik</h2>\n        <Formik\n          initialValues={{\n            email: '',\n            password: '',\n            fruit: 'avocado',\n            appointmentDate: '1/20/2021',\n            file: '',\n            attachments: [],\n          }}\n          validationSchema={FormSchema}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('Submit form data:', values)\n            setTimeout(() => {\n              console.log('Submit complete!')\n              setSubmitting(false)\n            }, 400)\n          }}>\n          {({\n            values,\n            errors,\n            touched,\n            handleSubmit,\n            isSubmitting,\n            setFieldValue,\n          }) => (\n            <Form onSubmit={handleSubmit}>\n              <div>\n                <span>Form data</span>\n                <pre>{JSON.stringify(values)}</pre>\n              </div>\n\n              {touched.email && errors.email && (\n                <Alert type=\"info\" validation heading=\"Email Requirements\">\n                  <ValidationChecklist id=\"validate-email\">\n                    <ValidationItem\n                      id=\"required\"\n                      isValid={values.email.length > 0}>\n                      Include required field.\n                    </ValidationItem>\n                    <ValidationItem id=\"validFormat\" isValid={!errors.email}>\n                      Use only valid email formatting\n                    </ValidationItem>\n                    {errors.email}\n                  </ValidationChecklist>\n                </Alert>\n              )}\n              <Label htmlFor=\"email\">Email</Label>\n              <Field\n                as={TextInput}\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                value={values.email}\n              />\n              {touched.password && errors.password && (\n                <Alert type=\"info\" validation heading=\"Password Requirements\">\n                  <ValidationChecklist id=\"validate-password\">\n                    <ValidationItem\n                      id=\"required\"\n                      isValid={values.password.length > 0}>\n                      Include required field.\n                    </ValidationItem>\n                    <ValidationItem id=\"length\" isValid={!errors.password}>\n                      Length is between 8-20 characters\n                    </ValidationItem>\n                  </ValidationChecklist>\n                </Alert>\n              )}\n              <Label htmlFor=\"password\">Password</Label>\n              <Field\n                as={TextInput}\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                value={values.password}\n              />\n              <Label htmlFor=\"fruit\">My Favorite Fruit</Label>\n              <Field\n                as={ComboBox}\n                name=\"fruit\"\n                id=\"fruit\"\n                options={fruitOptions}\n                onChange={(val: string) => setFieldValue('fruit', val, true)}\n                defaultValue=\"avocado\"></Field>\n\n              <FormGroup>\n                <Label id=\"appointment-date-label\" htmlFor=\"appointment-date\">\n                  Appointment date\n                </Label>\n                <div className=\"usa-hint\" id=\"appointment-date-hint\">\n                  mm/dd/yyyy\n                </div>\n                <Field\n                  as={DatePicker}\n                  id=\"appointmentDate\"\n                  name=\"appointmentDate\"\n                  aria-describedby=\"appointment-date-label appointment-date-hint\"\n                  defaultValue=\"2021-01-01\"\n                  onChange={(val: string) =>\n                    setFieldValue('appointmentDate', val, true)\n                  }\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Label htmlFor=\"file\">File input (single)</Label>\n                <FileInput\n                  id=\"file\"\n                  name=\"file\"\n                  onChange={(e: React.ChangeEvent): void => {\n                    const event = e as React.ChangeEvent<HTMLInputElement>\n\n                    if (event.target.files?.length) {\n                      setFieldValue('file', event.target.files[0])\n                    }\n                  }}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Label htmlFor=\"attachments\">File input (multiple)</Label>\n                <FileInput\n                  id=\"attachments\"\n                  name=\"attachments\"\n                  multiple\n                  onChange={(e: React.ChangeEvent): void => {\n                    const event = e as React.ChangeEvent<HTMLInputElement>\n                    const files = []\n                    if (event.target.files?.length) {\n                      for (let i = 0; i < event.target.files?.length; i++) {\n                        files.push(event.target.files[i])\n                      }\n                    }\n                    setFieldValue('attachments', files)\n                  }}\n                  onDrop={(e: React.DragEvent): void => {\n                    console.log('handle drop', e)\n                  }}\n                  ref={fileInputRef}\n                />\n              </FormGroup>\n\n              <Button type=\"submit\" disabled={isSubmitting}>\n                Submit\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </section>\n    </>\n  )\n}\n\nexport default FormsPage\n","import React from 'react'\n\nimport {\n  IconAccessibilityNew,\n  IconAccessibleForward,\n  IconAccountBalance,\n  IconAccountBox,\n  IconAccountCircle,\n  IconAdd,\n  IconAddCircle,\n  IconAddCircleOutline,\n  IconAlarm,\n  IconAlternateEmail,\n  IconAnnouncement,\n  IconArrowBack,\n  IconArrowDownward,\n  IconArrowDropDown,\n  IconArrowDropUp,\n  IconArrowForward,\n  IconArrowUpward,\n  IconApi,\n  IconAssessment,\n  IconAttachFile,\n  IconAttachMoney,\n  IconAutorenew,\n  IconBackpack,\n  IconBathtub,\n  IconBedding,\n  IconBookmark,\n  IconBugReport,\n  IconBuild,\n  IconCalendarToday,\n  IconCampaign,\n  IconCamping,\n  IconCancel,\n  IconChat,\n  IconCheck,\n  IconCheckBoxOutlineBlank,\n  IconCheckCircle,\n  IconCheckCircleOutline,\n  IconCheckroom,\n  IconCleanHands,\n  IconClothes,\n  IconClose,\n  IconClosedCaption,\n  IconCloud,\n  IconCode,\n  IconComment,\n  IconConnectWithoutContact,\n  IconConstruction,\n  IconConstructionWorker,\n  IconContactPage,\n  IconContentCopy,\n  IconCoronavirus,\n  IconCreditCard,\n  IconDeck,\n  IconDelete,\n  IconDeviceThermostat,\n  IconDirections,\n  IconDirectionsBike,\n  IconDirectionsBus,\n  IconDirectionsCar,\n  IconDirectionsWalk,\n  IconDoNotDisturb,\n  IconDoNotTouch,\n  IconDragHandle,\n  IconEco,\n  IconElectricalServices,\n  IconEmojiEvents,\n  IconError,\n  IconErrorOutline,\n  IconEvent,\n  IconExpandLess,\n  IconExpandMore,\n  IconFacebook,\n  IconFastForward,\n  IconFastRewind,\n  IconFavorite,\n  IconFavoriteBorder,\n  IconFileDownload,\n  IconFilePresent,\n  IconFileUpload,\n  IconFilterAlt,\n  IconFilterList,\n  IconFingerprint,\n  IconFirstPage,\n  IconFlag,\n  IconFlickr,\n  IconFlight,\n  IconFlooding,\n  IconFolder,\n  IconFolderOpen,\n  IconFormatQuote,\n  IconFormatSize,\n  IconForum,\n  IconGithub,\n  IconGridView,\n  IconGroupAdd,\n  IconGroups,\n  IconHearing,\n  IconHelp,\n  IconHelpOutline,\n  IconHighlightOff,\n  IconHistory,\n  IconHome,\n  IconHospital,\n  IconHotel,\n  IconHourglassEmpty,\n  IconHurricane,\n  IconIdentification,\n  IconImage,\n  IconInfo,\n  IconInfoOutline,\n  IconInsights,\n  IconInstagram,\n  IconKeyboard,\n  IconLabel,\n  IconLanguage,\n  IconLastPage,\n  IconLaunch,\n  IconLightbulb,\n  IconLightbulbOutline,\n  IconLink,\n  IconLinkOff,\n  IconList,\n  IconLocalCafe,\n  IconLocalFireDepartment,\n  IconLocalGasStation,\n  IconLocalGroceryStore,\n  IconLocalHospital,\n  IconLocalLaundryService,\n  IconLocalLibrary,\n  IconLocalOffer,\n  IconLocalParking,\n  IconLocalPharmacy,\n  IconLocalPolice,\n  IconLocalTaxi,\n  IconLocationCity,\n  IconLocationOn,\n  IconLock,\n  IconLockOpen,\n  IconLockOutline,\n  IconLogin,\n  IconLogout,\n  IconLoop,\n  IconMail,\n  IconMailOutline,\n  IconMap,\n  IconMasks,\n  IconMedicalServices,\n  IconMenu,\n  IconMilitaryTech,\n  IconMoreHoriz,\n  IconMoreVert,\n  IconMyLocation,\n  IconNavigateBefore,\n  IconNavigateNext,\n  IconNavigateFarBefore,\n  IconNavigateFarNext,\n  IconNearMe,\n  IconNotifications,\n  IconNotificationsActive,\n  IconNotificationsNone,\n  IconNotificationsOff,\n  IconPark,\n  IconPeople,\n  IconPerson,\n  IconPets,\n  IconPhone,\n  IconPhotoCamera,\n  IconPrint,\n  IconPriorityHigh,\n  IconPublic,\n  IconPushPin,\n  IconRadioButtonUnchecked,\n  IconRain,\n  IconReduceCapacity,\n  IconRemove,\n  IconReport,\n  IconRestaurant,\n  IconRssFeed,\n  IconSafetyDivider,\n  IconSanitizer,\n  IconSaveAlt,\n  IconSevereWeather,\n  IconSchedule,\n  IconSchool,\n  IconScience,\n  IconSearch,\n  IconSecurity,\n  IconSend,\n  IconSentimentDissatisfied,\n  IconSentimentNeutral,\n  IconSentimentSatisfied,\n  IconSentimentSatisfiedAlt,\n  IconSentimentVeryDissatisfied,\n  IconSettings,\n  IconShare,\n  IconShield,\n  IconShoppingBasket,\n  IconSnow,\n  IconSoap,\n  IconSocialDistance,\n  IconSortArrow,\n  IconSpellcheck,\n  IconStar,\n  IconStarHalf,\n  IconStarOutline,\n  IconStore,\n  IconSupport,\n  IconSupportAgent,\n  IconTextFields,\n  IconThumbDownAlt,\n  IconThumbUpAlt,\n  IconTimer,\n  IconToggleOff,\n  IconToggleOn,\n  IconTopic,\n  IconTornado,\n  IconTranslate,\n  IconTrendingDown,\n  IconTrendingUp,\n  IconTwitter,\n  IconUndo,\n  IconUnfoldLess,\n  IconUnfoldMore,\n  IconUpdate,\n  IconUploadFile,\n  IconVerified,\n  IconVerifiedUser,\n  IconVisiblity,\n  IconVisibilityOff,\n  IconVolumeOff,\n  IconWarning,\n  IconWash,\n  IconWifi,\n  IconWork,\n  IconYoutube,\n  IconZoomIn,\n  IconZoomOutMap,\n  IconZoomOut,\n} from '@trussworks/react-uswds'\n\nconst IconsPage = (): React.ReactElement => {\n  const args = { size: 6 } as const\n\n  return (\n    <section>\n      <h1>Icons</h1>\n      <p className=\"usa-intro\">\n        We’ve provided components for all of the icons included in USWDS.\n      </p>\n\n      <div>\n        <IconAccessibilityNew {...args} />\n        <IconAccessibleForward {...args} />\n        <IconAccountBalance {...args} />\n        <IconAccountBox {...args} />\n        <IconAccountCircle {...args} />\n        <IconAdd {...args} />\n        <IconAddCircle {...args} />\n        <IconAddCircleOutline {...args} />\n        <IconAlarm {...args} />\n        <IconAlternateEmail {...args} />\n        <IconAnnouncement {...args} />\n        <IconArrowBack {...args} />\n        <IconArrowDownward {...args} />\n        <IconArrowDropDown {...args} />\n        <IconArrowDropUp {...args} />\n        <IconArrowForward {...args} />\n        <IconArrowUpward {...args} />\n        <IconApi {...args} />\n        <IconAssessment {...args} />\n        <IconAttachFile {...args} />\n        <IconAttachMoney {...args} />\n        <IconAutorenew {...args} />\n        <IconBackpack {...args} />\n        <IconBathtub {...args} />\n        <IconBedding {...args} />\n        <IconBookmark {...args} />\n        <IconBugReport {...args} />\n        <IconBuild {...args} />\n        <IconCalendarToday {...args} />\n        <IconCampaign {...args} />\n        <IconCamping {...args} />\n        <IconCancel {...args} />\n        <IconChat {...args} />\n        <IconCheck {...args} />\n        <IconCheckBoxOutlineBlank {...args} />\n        <IconCheckCircle {...args} />\n        <IconCheckCircleOutline {...args} />\n        <IconCheckroom {...args} />\n        <IconCleanHands {...args} />\n        <IconClothes {...args} />\n        <IconClose {...args} />\n        <IconClosedCaption {...args} />\n        <IconCloud {...args} />\n        <IconCode {...args} />\n        <IconComment {...args} />\n        <IconConnectWithoutContact {...args} />\n        <IconConstruction {...args} />\n        <IconConstructionWorker {...args} />\n        <IconContactPage {...args} />\n        <IconContentCopy {...args} />\n        <IconCoronavirus {...args} />\n        <IconCreditCard {...args} />\n        <IconDeck {...args} />\n        <IconDelete {...args} />\n        <IconDeviceThermostat {...args} />\n        <IconDirections {...args} />\n        <IconDirectionsBike {...args} />\n        <IconDirectionsBus {...args} />\n        <IconDirectionsCar {...args} />\n        <IconDirectionsWalk {...args} />\n        <IconDoNotDisturb {...args} />\n        <IconDoNotTouch {...args} />\n        <IconDragHandle {...args} />\n        <IconEco {...args} />\n        <IconElectricalServices {...args} />\n        <IconEmojiEvents {...args} />\n        <IconError {...args} />\n        <IconErrorOutline {...args} />\n        <IconEvent {...args} />\n        <IconExpandLess {...args} />\n        <IconExpandMore {...args} />\n        <IconFacebook {...args} />\n        <IconFastForward {...args} />\n        <IconFastRewind {...args} />\n        <IconFavorite {...args} />\n        <IconFavoriteBorder {...args} />\n        <IconFileDownload {...args} />\n        <IconFilePresent {...args} />\n        <IconFileUpload {...args} />\n        <IconFilterAlt {...args} />\n        <IconFilterList {...args} />\n        <IconFingerprint {...args} />\n        <IconFirstPage {...args} />\n        <IconFlag {...args} />\n        <IconFlickr {...args} />\n        <IconFlight {...args} />\n        <IconFlooding {...args} />\n        <IconFolder {...args} />\n        <IconFolderOpen {...args} />\n        <IconFormatQuote {...args} />\n        <IconFormatSize {...args} />\n        <IconForum {...args} />\n        <IconGithub {...args} />\n        <IconGridView {...args} />\n        <IconGroupAdd {...args} />\n        <IconGroups {...args} />\n        <IconHearing {...args} />\n        <IconHelp {...args} />\n        <IconHelpOutline {...args} />\n        <IconHighlightOff {...args} />\n        <IconHistory {...args} />\n        <IconHome {...args} />\n        <IconHospital {...args} />\n        <IconHotel {...args} />\n        <IconHourglassEmpty {...args} />\n        <IconHurricane {...args} />\n        <IconIdentification {...args} />\n        <IconImage {...args} />\n        <IconInfo {...args} />\n        <IconInfoOutline {...args} />\n        <IconInsights {...args} />\n        <IconInstagram {...args} />\n        <IconKeyboard {...args} />\n        <IconLabel {...args} />\n        <IconLanguage {...args} />\n        <IconLastPage {...args} />\n        <IconLaunch {...args} />\n        <IconLightbulb {...args} />\n        <IconLightbulbOutline {...args} />\n        <IconLink {...args} />\n        <IconLinkOff {...args} />\n        <IconList {...args} />\n        <IconLocalCafe {...args} />\n        <IconLocalFireDepartment {...args} />\n        <IconLocalGasStation {...args} />\n        <IconLocalGroceryStore {...args} />\n        <IconLocalHospital {...args} />\n        <IconLocalLaundryService {...args} />\n        <IconLocalLibrary {...args} />\n        <IconLocalOffer {...args} />\n        <IconLocalParking {...args} />\n        <IconLocalPharmacy {...args} />\n        <IconLocalPolice {...args} />\n        <IconLocalTaxi {...args} />\n        <IconLocationCity {...args} />\n        <IconLocationOn {...args} />\n        <IconLock {...args} />\n        <IconLockOpen {...args} />\n        <IconLockOutline {...args} />\n        <IconLogin {...args} />\n        <IconLogout {...args} />\n        <IconLoop {...args} />\n        <IconMail {...args} />\n        <IconMailOutline {...args} />\n        <IconMap {...args} />\n        <IconMasks {...args} />\n        <IconMedicalServices {...args} />\n        <IconMenu {...args} />\n        <IconMilitaryTech {...args} />\n        <IconMoreHoriz {...args} />\n        <IconMoreVert {...args} />\n        <IconMyLocation {...args} />\n        <IconNavigateBefore {...args} />\n        <IconNavigateNext {...args} />\n        <IconNavigateFarBefore {...args} />\n        <IconNavigateFarNext {...args} />\n        <IconNearMe {...args} />\n        <IconNotifications {...args} />\n        <IconNotificationsActive {...args} />\n        <IconNotificationsNone {...args} />\n        <IconNotificationsOff {...args} />\n        <IconPark {...args} />\n        <IconPeople {...args} />\n        <IconPerson {...args} />\n        <IconPets {...args} />\n        <IconPhone {...args} />\n        <IconPhotoCamera {...args} />\n        <IconPrint {...args} />\n        <IconPriorityHigh {...args} />\n        <IconPublic {...args} />\n        <IconPushPin {...args} />\n        <IconRadioButtonUnchecked {...args} />\n        <IconRain {...args} />\n        <IconReduceCapacity {...args} />\n        <IconRemove {...args} />\n        <IconReport {...args} />\n        <IconRestaurant {...args} />\n        <IconRssFeed {...args} />\n        <IconSafetyDivider {...args} />\n        <IconSanitizer {...args} />\n        <IconSaveAlt {...args} />\n        <IconSevereWeather {...args} />\n        <IconSchedule {...args} />\n        <IconSchool {...args} />\n        <IconScience {...args} />\n        <IconSearch {...args} />\n        <IconSecurity {...args} />\n        <IconSend {...args} />\n        <IconSentimentDissatisfied {...args} />\n        <IconSentimentNeutral {...args} />\n        <IconSentimentSatisfied {...args} />\n        <IconSentimentSatisfiedAlt {...args} />\n        <IconSentimentVeryDissatisfied {...args} />\n        <IconSettings {...args} />\n        <IconShare {...args} />\n        <IconShield {...args} />\n        <IconShoppingBasket {...args} />\n        <IconSnow {...args} />\n        <IconSoap {...args} />\n        <IconSocialDistance {...args} />\n        <IconSortArrow {...args} />\n        <IconSpellcheck {...args} />\n        <IconStar {...args} />\n        <IconStarHalf {...args} />\n        <IconStarOutline {...args} />\n        <IconStore {...args} />\n        <IconSupport {...args} />\n        <IconSupportAgent {...args} />\n        <IconTextFields {...args} />\n        <IconThumbDownAlt {...args} />\n        <IconThumbUpAlt {...args} />\n        <IconTimer {...args} />\n        <IconToggleOff {...args} />\n        <IconToggleOn {...args} />\n        <IconTopic {...args} />\n        <IconTornado {...args} />\n        <IconTranslate {...args} />\n        <IconTrendingDown {...args} />\n        <IconTrendingUp {...args} />\n        <IconTwitter {...args} />\n        <IconUndo {...args} />\n        <IconUnfoldLess {...args} />\n        <IconUnfoldMore {...args} />\n        <IconUpdate {...args} />\n        <IconUploadFile {...args} />\n        <IconVerified {...args} />\n        <IconVerifiedUser {...args} />\n        <IconVisiblity {...args} />\n        <IconVisibilityOff {...args} />\n        <IconVolumeOff {...args} />\n        <IconWarning {...args} />\n        <IconWash {...args} />\n        <IconWifi {...args} />\n        <IconWork {...args} />\n        <IconYoutube {...args} />\n        <IconZoomIn {...args} />\n        <IconZoomOutMap {...args} />\n        <IconZoomOut {...args} />\n      </div>\n    </section>\n  )\n}\n\nexport default IconsPage\n","const Routes = {\n  HOME_PAGE: '/',\n  EXAMPLES_PAGE: '/examples',\n  FORMS_PAGE: '/forms',\n  ICONS_PAGE: '/icons',\n}\n\nexport { Routes }\n","import React, { useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  NavLink,\n  Link,\n} from 'react-router-dom'\n\n\nimport '@trussworks/react-uswds/lib/uswds.css'\nimport '@trussworks/react-uswds/lib/index.css'\nimport {\n  GovBanner,\n  Header,\n  Title,\n  NavMenuButton,\n  PrimaryNav,\n  GridContainer,\n} from '@trussworks/react-uswds'\n\nimport HomePage from './pages/Home'\nimport ExamplePage from './pages/Example'\nimport FormsPage from './pages/Forms'\nimport IconsPage from './pages/Icons'\nimport { Routes } from './routes'\n\nimport './App.css'\n\nconst App = () => {\n  const [mobileNavOpen, setMobileNavOpen] = useState(false)\n  const { HOME_PAGE, EXAMPLES_PAGE, FORMS_PAGE, ICONS_PAGE } = Routes\n\n  const toggleMobileNav = (): void => {\n    setMobileNavOpen((prevOpen) => !prevOpen)\n  }\n\n  const navItems = [\n    <NavLink to={HOME_PAGE} >\n      Home\n    </NavLink>,\n    <NavLink to={EXAMPLES_PAGE} >\n      Examples\n    </NavLink>,\n    <NavLink to={ICONS_PAGE} >\n      Icons\n    </NavLink>,\n  ]\n\n  return (\n    <Router>\n      <GovBanner />\n      <Header basic>\n        <div className=\"usa-nav-container\">\n          <div className=\"usa-navbar\">\n            <Title>\n              <Link to={HOME_PAGE}>Example Application</Link>\n            </Title>\n            <NavMenuButton\n              label=\"Menu\"\n              onClick={toggleMobileNav}\n              className=\"usa-menu-btn\"\n            />\n          </div>\n\n          <PrimaryNav\n            aria-label=\"Primary navigation\"\n            items={navItems}\n            onToggleMobileNav={toggleMobileNav}\n            mobileExpanded={mobileNavOpen}\n          />\n        </div>\n      </Header>\n\n      <section className=\"usa-section\">\n        <GridContainer>\n          <Route>\n            <Route path={EXAMPLES_PAGE}>\n              <ExamplePage />\n            </Route>\n            <Route path={ICONS_PAGE}>\n              <IconsPage />\n            </Route>\n            <Route path={FORMS_PAGE}>\n              <FormsPage />\n            </Route>\n            <Route path={HOME_PAGE}>\n              <HomePage />\n            </Route>\n          </Route>\n        </GridContainer>\n      </section>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}