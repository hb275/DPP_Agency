{"ast":null,"code":"var _jsxFileName = \"/Users/hosseinbagheri/Desktop/example/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\nimport '@trussworks/react-uswds/lib/uswds.css';\nimport '@trussworks/react-uswds/lib/index.css';\nimport { GridContainer } from '@trussworks/react-uswds';\nimport HomePage from './pages/Home';\nimport ExamplePage from './pages/Example';\nimport FormsPage from './pages/Forms';\nimport IconsPage from './pages/Icons';\nimport { Routes } from './routes';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [mobileNavOpen, setMobileNavOpen] = useState(false);\n  const {\n    HOME_PAGE,\n    EXAMPLES_PAGE,\n    FORMS_PAGE,\n    ICONS_PAGE\n  } = Routes;\n\n  const toggleMobileNav = () => {\n    setMobileNavOpen(prevOpen => !prevOpen);\n  };\n\n  const navItems = [/*#__PURE__*/_jsxDEV(NavLink, {\n    to: \"/HOME_PAGE\",\n    children: \"Home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n    to: \"/EXAMPLES_PAGE\",\n    children: \"Examples\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n    to: \"/ICONS_PAGE\",\n    children: \"Icons\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this)];\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"usa-section\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(GridContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: EXAMPLES_PAGE,\n            children: /*#__PURE__*/_jsxDEV(ExamplePage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: ICONS_PAGE,\n            children: /*#__PURE__*/_jsxDEV(IconsPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: FORMS_PAGE,\n            children: /*#__PURE__*/_jsxDEV(FormsPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: HOME_PAGE,\n            children: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/QOU+neYn06vhSjjnkQ7ORELtBA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hosseinbagheri/Desktop/example/src/App.tsx"],"names":["React","useState","BrowserRouter","Router","Route","NavLink","GridContainer","HomePage","ExamplePage","FormsPage","IconsPage","Routes","App","mobileNavOpen","setMobileNavOpen","HOME_PAGE","EXAMPLES_PAGE","FORMS_PAGE","ICONS_PAGE","toggleMobileNav","prevOpen","navItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,OAHF,QAKO,kBALP;AAOA,OAAO,uCAAP;AACA,OAAO,uCAAP;AACA,SAMEC,aANF,QAOO,yBAPP;AASA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAEc,IAAAA,SAAF;AAAaC,IAAAA,aAAb;AAA4BC,IAAAA,UAA5B;AAAwCC,IAAAA;AAAxC,MAAuDP,MAA7D;;AAEA,QAAMQ,eAAe,GAAG,MAAY;AAClCL,IAAAA,gBAAgB,CAAEM,QAAD,IAAc,CAACA,QAAhB,CAAhB;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAG,cACf,QAAC,OAAD;AAAS,IAAA,EAAE,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADe,eAIf,QAAC,OAAD;AAAS,IAAA,EAAE,EAAC,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJe,eAOf,QAAC,OAAD;AAAS,IAAA,EAAE,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPe,CAAjB;AAYA,sBAEE,QAAC,MAAD;AAAA,2BAEE;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE,QAAC,aAAD;AAAA,kCAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEL,aAAb;AAAA,mCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEE,UAAb;AAAA,mCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF,eAQE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAED,UAAb;AAAA,mCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARF,eAWE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEF,SAAb;AAAA,mCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UAFF;AA+BD,CAnDD;;GAAMH,G;;KAAAA,G;AAqDN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  NavLink,\n  Link,\n} from 'react-router-dom'\n\nimport '@trussworks/react-uswds/lib/uswds.css'\nimport '@trussworks/react-uswds/lib/index.css'\nimport {\n  GovBanner,\n  Header,\n  Title,\n  NavMenuButton,\n  PrimaryNav,\n  GridContainer,\n} from '@trussworks/react-uswds'\n\nimport HomePage from './pages/Home'\nimport ExamplePage from './pages/Example'\nimport FormsPage from './pages/Forms'\nimport IconsPage from './pages/Icons'\nimport { Routes } from './routes'\n\nimport './App.css'\n\nconst App = () => {\n  const [mobileNavOpen, setMobileNavOpen] = useState(false)\n  const { HOME_PAGE, EXAMPLES_PAGE, FORMS_PAGE, ICONS_PAGE } = Routes\n\n  const toggleMobileNav = (): void => {\n    setMobileNavOpen((prevOpen) => !prevOpen)\n  }\n\n  const navItems = [\n    <NavLink to=\"/HOME_PAGE\" >\n      Home\n    </NavLink>,\n    <NavLink to=\"/EXAMPLES_PAGE\">\n      Examples\n    </NavLink>,\n    <NavLink to=\"/ICONS_PAGE\">\n      Icons\n    </NavLink>,\n  ]\n\n  return (\n\n    <Router>\n\n      <section className=\"usa-section\">\n        <Router>\n          <GridContainer>\n\n            <Route path={EXAMPLES_PAGE}>\n              <ExamplePage />\n            </Route>\n            <Route path={ICONS_PAGE}>\n              <IconsPage />\n            </Route>\n            <Route path={FORMS_PAGE}>\n              <FormsPage />\n            </Route>\n            <Route path={HOME_PAGE}>\n              <HomePage />\n            </Route>\n\n          </GridContainer>\n        </Router>\n      </section>\n    </Router>\n\n\n\n\n\n  );\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}